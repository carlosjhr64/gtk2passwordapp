#!/usr/bin/env ruby
require 'rafini'
using Rafini::Exception

begin
  nogui = ARGV.include?('--no-gui')
  if nogui

    # Helper Gem
    require 'user_space'
    # This Gem
    require 'gtk2passwordapp/version'
    require 'gtk2passwordapp/config'

    mod     = Gtk2passwordapp
    version = mod::VERSION
    appdir  = mod::APPDIR
    config  = mod::CONFIG
    appname = File.join 'gtk3app', mod.name.downcase

    user_space = UserSpace.new(appname: appname, appdir: appdir)
    user_space.install unless user_space.version == version
    user_space.configures(config)

    pwd_file = config[:PwdFile]
    # TODO: decomment
    #raise "Could not find passwords data file." unless File.exist? pwd_file

    require 'io/console' # Standard library
    pwd0 = nil
    print 'Password: '
    pwd = $stdin.noecho(&:gets).strip
    while pwd != pwd0
      exit if pwd == ''
      pwd0 = pwd
      puts
      print 'Again: '
      pwd = $stdin.noecho(&:gets).strip
    end
    puts

    # Helper Gem
    require 'yaml_zlib_blowfish'
    # This Gem
    require 'gtk2passwordapp/account'
    require 'gtk2passwordapp/accounts'

    accounts = Gtk2passwordapp::Accounts.new(pwd, pwd_file)
    # TODO: decomment
    #account.load

    if ARGV.include? '--dump'
      # Remember that ARGV is at least ['--no-gui'].
      pattern = (ARGV.last[0]=='-')? nil : Regexp.new(ARGV.last)
      accounts.names do |name|
        next if pattern and not pattern=~/name/
        account = accounts.get(name)
        puts [account.name, account.username, account.password].join("\t")
        if ARGV.include? '--verbose'
          puts account.url
          puts account.note
          using Rafini::Odometers
          puts 'Updated ' +  account.updated.sec2time.to_s + ' ago.'
          puts
        end
      end
      exit
    end

    print 'Account Name: '
    name = $stdin.gets.strip
    # TODO: decomment
    #raise "Could not find account #{name}" unless accounts.include?(name)

    # TODO: decomment
    #account = accounts.get(name)
    #password = account.password
    password = 'ThePassword' # TODO: delete this mockup line

    puts password

    exit
  end
rescue StandardError
  $!.puts
  exit 1
end

# OK, not a no-gui, run gui!

# TODO: decomment
require 'gtk3app'
ARGV.push 'gtk2passwordapp' # going to pretend to be gtk3app
Gtk3App.main
