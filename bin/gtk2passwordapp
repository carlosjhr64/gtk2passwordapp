#!/usr/bin/env ruby
require 'rafini'
using Rafini::Exception

begin
  nogui, hlp, vrs = ARGV.include?('--no-gui'), ARGV.include?('--help'), ARGV.include?('--version')
  if nogui or hlp or vrs

    # Helper Gem
    require 'user_space'
    # This Gem
    require 'gtk2passwordapp/version'
    require 'gtk2passwordapp/config'

    mod     = Gtk2passwordapp
    version = mod::VERSION

    if vrs
      puts mod::VERSION
      exit
    end

    appdir  = mod::APPDIR
    config  = mod::CONFIG

    if hlp
      puts mod::CONFIG[:Help]
      exit
    end

    appname = File.join 'gtk3app', mod.name.downcase
    user_space = UserSpace.new(appname: appname, appdir: appdir)
    user_space.install unless user_space.version == version
    user_space.configures(config)

    pwd_file = config[:PwdFile]
    raise "Could not find passwords data file." unless File.exist? pwd_file

    require 'io/console' # Standard library
    pwd0 = nil
    print 'Password: '
    pwd = $stdin.noecho(&:gets).strip
    while pwd != pwd0
      exit if pwd == ''
      pwd0 = pwd
      puts
      print 'Again: '
      pwd = $stdin.noecho(&:gets).strip
    end
    puts

    # Helper Gem
    require 'yaml_zlib_blowfish'
    # This Gem
    require 'gtk2passwordapp/account'
    require 'gtk2passwordapp/accounts'

    accounts = Gtk2passwordapp::Accounts.new(pwd_file, pwd)
    accounts.load

    if ARGV.include? '--dump'
      puts
      # Remember that ARGV is at least ['--no-gui'].
      pattern = (ARGV.last[0]=='-')? nil : Regexp.new(ARGV.last)
      now = Time.now.to_i
      accounts.names.each do |name|
        next if pattern and not pattern=~name
        account = accounts.get(name)
        puts [account.name, account.username, account.password].join("\n\t")
        if ARGV.include? '--verbose'
          puts "\t" + account.url
          puts "\t" + account.note
          using Rafini::Odometers
          puts "\tUpdated " +  (now - account.updated).sec2time.to_s + ' ago.'
        end
        puts
      end
      exit
    end

    unless name = (ARGV.last[0]=='-')? nil : ARGV.last
      print 'Account Name: '
      name = $stdin.gets.strip
    end
    raise "Could not find account \"#{name}\"." unless accounts.include?(name)

    account = accounts.get(name)
    password = account.password

    puts password

    exit
  end
rescue StandardError
  $!.puts
  exit 1
end

# OK, not a no-gui, run gui!

require 'gtk3app'
ARGV.push 'gtk2passwordapp' # going to pretend to be gtk3app
Gtk3App.main
