#! ruby
require 'test/unit'

require 'such/convention'
require 'rafini'
require 'base_convert'
require 'super_random'
require 'user_space'
class Gtk2PasswordApp
  VERSION = `ruby -I ./lib ./bin/gtk2passwordapp -v`.strip
end

require 'gtk2passwordapp/config'

class TestConfig < Test::Unit::TestCase
  using Rafini::String
  def test_convention
    assert_nil Such::Convention.validate Gtk2PasswordApp::CONFIG
  end

  def test_config
    config = Gtk2PasswordApp::CONFIG
    assert_equal Hash, config.class

    # Checking convention use
    config.each do |k,v|
      case k
      when /^[A-Z_]+$/
        assert_equal Array, v.class
      when /^[a-z_]+$/
        assert_equal Hash, v.class
      when /^[a-zA-Z]+$/
        assert((v.class==String) || (v.class==Integer))
      when /^\w+\!$/
        assert_equal Array, v.class
      else
        raise "Got bad thing key :#{k}."
      end
    end

    # sanity checks
    assert_equal Gtk2PasswordApp::VERSION.semantic(0..1), config[:about_dialog][:set_version]
    assert_equal 'Password Manager', config[:about_dialog][:set_program_name]
  end
end
